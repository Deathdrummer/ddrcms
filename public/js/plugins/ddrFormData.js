function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}export default function ddrFormData(){var formSelector=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;if(_.isNull(formSelector))return!1;var formElement=formSelector,form=new FormData;function appendFormData(formData,key,value){"object"===_typeof(value)&&null!==value?Object.keys(value).forEach((function(subKey){appendFormData(formData,"".concat(key,"[").concat(subKey,"]"),value[subKey])})):formData.append(key,value)}function appendFormData(formData,name,file){var keys=name.match(/[^\[\]]+/g),currentKey=keys.shift();if(keys.length>0){var nestedName=currentKey;keys.forEach((function(key){nestedName+="[".concat(key,"]")})),formData.append(nestedName,file)}else formData.append(name,file)}var formDataObject={};return formElement.querySelectorAll('input:not([type="file"]), textarea, select').forEach((function(input){var name=input.name,value=input.value,keys=name.match(/[^\[\]]+/g),current=formDataObject;keys.forEach((function(key,index){index===keys.length-1?current[key]=value:(current[key]=current[key]||{},current=current[key])}))})),Object.keys(formDataObject).forEach((function(key){appendFormData(form,key,formDataObject[key])})),formElement.querySelectorAll('input[type="file"]').forEach((function(input){var files=input.files;if(files.length>0)if(input.name.endsWith("[]"))for(var i=0;i<files.length;i++)form.append(input.name,files[i]);else for(var _i=0;_i<files.length;_i++)appendFormData(form,input.name,files[_i])})),form}